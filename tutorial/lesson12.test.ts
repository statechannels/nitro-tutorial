/* Import ethereum wallet utilities  */
import { HashZero } from "ethers/constants";

/* Import statechannels wallet utilities  */
import {
  GuaranteeAssetOutcome,
  Outcome,
  encodeOutcome,
  decodeOutcome,
} from "@statechannels/nitro-protocol";

it("Lesson 12: Construct a guarantee Outcome", async () => {
  /*
    Construct a guarantee outcome that gives preference to player b over player a
  */
  const assetOutcome: GuaranteeAssetOutcome = {
    assetHolderAddress: process.env.ETH_ASSET_HOLDER_ADDRESS,
    guarantee: {
      targetChannelId: HashZero,
      destinations: [
        "0x000000000000000000000000000000000000000000000000000000000000000a", // FIXME
        "0x000000000000000000000000000000000000000000000000000000000000000b", // FIXME
      ],
    },
  };

  const outcome: Outcome = [assetOutcome]; // Additional assetOutcomes could be pushed into this array

  expect(encodeOutcome(outcome)).toEqual(
    "0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000009ed274314f0fb37837346c425d3cf28d89ca95990000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000b000000000000000000000000000000000000000000000000000000000000000a"
  );
  expect(decodeOutcome(encodeOutcome(outcome))).toEqual(outcome);
});
