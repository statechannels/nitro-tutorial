/* Import ethereum wallet utilities  */
import { ethers } from "ethers";
const { AddressZero } = ethers.constants;

/* Import statechannels wallet utilities  */
import {
  AllocationAssetOutcome,
  Outcome,
  encodeOutcome,
  decodeOutcome,
  convertAddressToBytes32,
} from "@statechannels/nitro-protocol";

it("Lesson 11: Construct an allocation Outcome", async () => {
  /*
    Construct an outcome allocating 3 wei to the zero address
    Recall that earlier in the tutorial we depositied into the ETH_ASSET_HOLDER
    whose address is stored in process.env
  */
  const assetOutcome: AllocationAssetOutcome = {
    assetHolderAddress: AddressZero, // FIXME
    allocationItems: [
      { destination: convertAddressToBytes32(AddressZero), amount: "0x03" },
      // other payouts go here
    ],
  };

  const outcome: Outcome = [assetOutcome]; // Additional assetOutcomes could be pushed into this array

  expect(encodeOutcome(outcome)).toEqual(
    "0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000009ed274314f0fb37837346c425d3cf28d89ca95990000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003"
  );
  expect(decodeOutcome(encodeOutcome(outcome))).toEqual(outcome);
});
